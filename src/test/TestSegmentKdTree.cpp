#include <cassert>
#include <iostream>
#include <test/TestUtils.h>
#include <SegmentKdTree.h>
using namespace std;

void testSegmentKdTree() { /* 检测建树的基本功能 */
    {
        SegmentKdTree skdt({
            {{0, 0}, {0, 1}, 0, 0},
            {{0, 1}, {1, 1}, 0, 1},
            {{1, 1}, {0.5, 0}, 0, 2}
        });
        auto s = skdt.serialize();
        assert(s == "(ch0:(ch0:(ch0:NULL,ch1:NULL,aabb:(0.000000,0.000000,0.000000,1.000000),s2d:((0.000000,0.000000),(0.000000,1.000000),0,0)),ch1:(ch0:NULL,ch1:NULL,aabb:(0.000000,1.000000,1.000000,1.000000),s2d:((0.000000,1.000000),(1.000000,1.000000),0,1)),aabb:(0.000000,1.000000,0.000000,1.000000),s2d:NULL),ch1:(ch0:NULL,ch1:NULL,aabb:(0.500000,1.000000,0.000000,1.000000),s2d:((1.000000,1.000000),(0.500000,0.000000),0,2)),aabb:(0.000000,1.000000,0.000000,1.000000),s2d:NULL)");
        cout << OK_FLAG << s << endl;
    }
    {
        SegmentKdTree skdt({
            {{0, 1}, {0, 0}, 0, 0},
            {{0, 0}, {0, 0.7}, 0, 1},
            {{0, 0.7}, {0.5, 1}, 0, 2}
        });
        auto s = skdt.serialize();
        assert(s == "(ch0:(ch0:(ch0:NULL,ch1:NULL,aabb:(0.000000,0.000000,0.000000,0.700000),s2d:((0.000000,0.000000),(0.000000,0.700000),0,1)),ch1:(ch0:NULL,ch1:NULL,aabb:(0.000000,0.000000,0.000000,1.000000),s2d:((0.000000,1.000000),(0.000000,0.000000),0,0)),aabb:(0.000000,0.000000,0.000000,1.000000),s2d:NULL),ch1:(ch0:NULL,ch1:NULL,aabb:(0.000000,0.500000,0.700000,1.000000),s2d:((0.000000,0.700000),(0.500000,1.000000),0,2)),aabb:(0.000000,0.500000,0.000000,1.000000),s2d:NULL)");
        cout << OK_FLAG << s << endl;
    }
}
